
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left=PLUSASSIGNMINASSIGNMULTASSIGNDIVASSIGNleft+-MPLUSMMINUSleft*/MMLTPMDIVrightUMINUSleft'BREAK CONTINUE DIVASSIGN ELSE EQ EYE FLOATNUM FOR GTEQ ID IF INTNUM LTEQ MDIV MINASSIGN MMINUS MMLTP MPLUS MULTASSIGN NEQ ONES PLUSASSIGN PRINT RETURN STRING WHILE ZEROSstart : struct\n             | start struct\n             | '{' start '}'\n             | start '{' start '}'struct : expr ';'\n              | cond_expr\n              | instructionloop_start : loop_struct\n                  | loop_start loop_struct\n                  | '{' loop_start '}'\n                  | loop_start '{' loop_start '}'loop_struct : expr ';'\n                   | loop_cond_expr\n                   | loop_instructionexpr : INTNUM\n            | FLOATNUM\n            | STRINGexpr : lvalueexpr : '(' expr ')'expr : '-' expr %prec UMINUSexpr : expr '\\''array_interior : array_interior ',' expr\n                      | exprexpr : '[' array_interior ']'lvalue : ID\n              | ID '[' expr ']'\n              | ID '[' expr ',' expr ']'expr : lvalue '=' expr\n            | lvalue PLUSASSIGN expr\n            | lvalue MINASSIGN expr\n            | lvalue MULTASSIGN expr\n            | lvalue DIVASSIGN expr\n            | lvalue '=' ZEROS '(' expr ')'\n            | lvalue '=' ONES '(' expr ')'\n            | lvalue '=' EYE '(' expr ')'expr : expr '+' expr\n            | expr '-' expr\n            | expr '*' expr\n            | expr '/' exprexpr : expr MPLUS expr\n            | expr MMINUS expr\n            | expr MMLTP expr\n            | expr MDIV exprexpr : expr EQ expr\n            | expr NEQ expr\n            | expr GTEQ expr\n            | expr LTEQ expr\n            | expr '>' expr\n            | expr '<' exprcond_expr : cond_if\n                 | cond_while\n                 | cond_forcond_block : struct\n                  | '{' start '}'cond_if : IF '(' expr ')' cond_block\n               | cond_if ELSE cond_blockloop_cond_expr : loop_cond_if\n                      | cond_while\n                      | cond_forloop_cond_block : loop_struct\n                       | '{' loop_start '}'loop_cond_if : IF '(' expr ')' loop_cond_block\n                    | loop_cond_if ELSE loop_cond_blockcond_while : WHILE '(' expr ')' loop_cond_blockcond_for : FOR ID '=' expr ':' expr loop_cond_blockinstruction : RETURN expr ';'\n                   | PRINT array_interior ';'loop_instruction : BREAK ';'\n                        | CONTINUE ';'\n                        | RETURN expr ';'\n                        | PRINT array_interior ';'"
    
_lr_action_items = {'{':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[3,24,-1,3,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,3,24,-5,-21,-20,87,24,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,3,-66,-67,-4,24,-26,87,114,-54,-55,-64,-60,131,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,131,142,-8,114,-68,-69,114,142,131,-61,-9,-63,-70,-71,-65,-10,142,114,-37,-11,-62,]),'INTNUM':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[7,7,-1,7,-6,-7,-15,-16,-17,-18,7,7,7,-50,-51,-52,7,7,-25,-2,7,7,-5,-21,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-20,7,7,7,7,7,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,7,-56,-53,7,-66,-67,7,-4,7,7,7,7,-26,7,7,7,-54,-55,-64,-60,7,-13,-14,-57,-58,-59,7,7,7,-33,-34,-35,-27,-12,7,7,-8,7,-68,-69,7,7,7,7,-61,-9,-63,-70,-71,-65,7,-10,7,7,-37,-11,-62,]),'FLOATNUM':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[8,8,-1,8,-6,-7,-15,-16,-17,-18,8,8,8,-50,-51,-52,8,8,-25,-2,8,8,-5,-21,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-20,8,8,8,8,8,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,8,-56,-53,8,-66,-67,8,-4,8,8,8,8,-26,8,8,8,-54,-55,-64,-60,8,-13,-14,-57,-58,-59,8,8,8,-33,-34,-35,-27,-12,8,8,-8,8,-68,-69,8,8,8,8,-61,-9,-63,-70,-71,-65,8,-10,8,8,-37,-11,-62,]),'STRING':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[9,9,-1,9,-6,-7,-15,-16,-17,-18,9,9,9,-50,-51,-52,9,9,-25,-2,9,9,-5,-21,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-20,9,9,9,9,9,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,9,-56,-53,9,-66,-67,9,-4,9,9,9,9,-26,9,9,9,-54,-55,-64,-60,9,-13,-14,-57,-58,-59,9,9,9,-33,-34,-35,-27,-12,9,9,-8,9,-68,-69,9,9,9,9,-61,-9,-63,-70,-71,-65,9,-10,9,9,-37,-11,-62,]),'(':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[11,11,-1,11,-6,-7,-15,-16,-17,-18,11,11,11,-50,-51,-52,11,11,-25,55,56,-2,11,11,-5,-21,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-20,11,11,11,11,11,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,95,96,97,-29,-30,-31,-32,-19,-24,11,-56,-53,11,-66,-67,11,-4,11,11,11,11,-26,11,11,11,-54,-55,-64,-60,11,-13,-14,-57,-58,-59,11,11,139,11,-33,-34,-35,-27,-12,11,11,-8,11,-68,-69,11,11,11,11,-61,-9,-63,-70,-71,-65,11,-10,11,11,-37,-11,-62,]),'-':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,],[12,12,-1,12,29,-6,-7,-15,-16,-17,-18,12,12,12,-50,-51,-52,12,12,-25,-2,12,12,-5,-21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,29,-20,29,12,29,12,12,12,12,-3,-36,-37,-38,-39,-40,-41,-42,-43,29,29,29,29,29,29,29,29,29,29,29,-19,-24,12,-56,-53,12,-66,-67,29,29,29,12,-4,12,12,12,29,12,-26,12,12,12,29,29,29,29,-54,29,-55,29,-64,-60,12,-13,-14,-57,-58,-59,12,12,12,-33,-34,-35,-27,-12,12,12,-8,12,-68,-69,29,12,150,12,12,-61,-9,-63,-70,-71,29,-65,12,-10,12,12,-20,-11,-62,]),'[':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[13,13,-1,13,-6,-7,-15,-16,-17,-18,13,13,13,-50,-51,-52,13,13,54,-2,13,13,-5,-21,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-20,13,13,13,13,13,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,13,-56,-53,13,-66,-67,13,-4,13,13,13,13,-26,13,13,13,-54,-55,-64,-60,13,-13,-14,-57,-58,-59,13,13,13,-33,-34,-35,-27,-12,13,13,-8,13,-68,-69,13,13,13,13,-61,-9,-63,-70,-71,-65,13,-10,13,13,-37,-11,-62,]),'RETURN':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[17,17,-1,17,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,17,17,-5,-21,-20,17,17,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,17,-66,-67,-4,17,-26,17,122,-54,-55,-64,-60,122,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,122,122,-8,122,-68,-69,122,122,122,-61,-9,-63,-70,-71,-65,-10,122,122,-37,-11,-62,]),'PRINT':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[18,18,-1,18,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,18,18,-5,-21,-20,18,18,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,18,-66,-67,-4,18,-26,18,123,-54,-55,-64,-60,123,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,123,123,-8,123,-68,-69,123,123,123,-61,-9,-63,-70,-71,-65,-10,123,123,-37,-11,-62,]),'ID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,],[19,19,-1,19,-6,-7,-15,-16,-17,-18,19,19,19,-50,-51,-52,19,19,-25,57,-2,19,19,-5,-21,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-20,19,19,19,19,19,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,19,-56,-53,19,-66,-67,19,-4,19,19,19,19,-26,19,19,19,-54,-55,-64,-60,19,-13,-14,-57,-58,-59,19,19,19,-33,-34,-35,-27,-12,19,19,-8,19,-68,-69,19,19,19,19,-61,-9,-63,-70,-71,-65,19,-10,19,19,-37,-11,-62,]),'IF':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[20,20,-1,20,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,20,20,-5,-21,-20,20,20,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,20,-66,-67,-4,20,-26,20,124,-54,-55,-64,-60,124,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,124,124,-8,124,-68,-69,124,124,124,-61,-9,-63,-70,-71,-65,-10,124,124,-37,-11,-62,]),'WHILE':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[21,21,-1,21,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,21,21,-5,-21,-20,21,21,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,21,-66,-67,-4,21,-26,21,21,-54,-55,-64,-60,21,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,21,21,-8,21,-68,-69,21,21,21,-61,-9,-63,-70,-71,-65,-10,21,21,-37,-11,-62,]),'FOR':([0,1,2,3,5,6,7,8,9,10,14,15,16,19,23,24,25,26,27,48,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,94,99,100,102,103,108,110,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[22,22,-1,22,-6,-7,-15,-16,-17,-18,-50,-51,-52,-25,-2,22,22,-5,-21,-20,22,22,-3,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-56,-53,22,-66,-67,-4,22,-26,22,22,-54,-55,-64,-60,22,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,22,22,-8,22,-68,-69,22,22,22,-61,-9,-63,-70,-71,-65,-10,22,22,-37,-11,-62,]),'$end':([1,2,5,6,14,15,16,23,26,59,85,86,88,89,94,108,110,112,113,115,116,117,118,119,130,135,136,143,145,146,147,149,156,],[0,-1,-6,-7,-50,-51,-52,-2,-5,-3,-56,-53,-66,-67,-4,-54,-55,-64,-60,-13,-14,-57,-58,-59,-12,-68,-69,-61,-63,-70,-71,-65,-62,]),'}':([2,5,6,14,15,16,23,25,26,58,59,85,86,88,89,94,99,108,110,112,113,115,116,117,118,119,130,132,133,135,136,141,143,144,145,146,147,149,151,152,155,156,],[-1,-6,-7,-50,-51,-52,-2,59,-5,94,-3,-56,-53,-66,-67,-4,108,-54,-55,-64,-60,-13,-14,-57,-58,-59,-12,143,-8,-68,-69,151,-61,-9,-63,-70,-71,-65,-10,155,-11,-62,]),';':([4,7,8,9,10,19,27,48,50,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,98,100,111,120,121,126,127,128,129,137,138,154,],[26,-15,-16,-17,-18,-25,-21,-20,-23,88,89,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-22,-26,130,135,136,-33,-34,-35,-27,146,147,-20,]),"'":([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[27,-15,-16,-17,-18,-25,-21,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-19,-24,27,27,27,27,-26,27,27,27,27,27,27,-33,-34,-35,-27,27,27,27,27,]),'+':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[28,-15,-16,-17,-18,-25,-21,28,-20,28,28,-36,-37,-38,-39,-40,-41,-42,-43,28,28,28,28,28,28,28,28,28,28,28,-19,-24,28,28,28,28,-26,28,28,28,28,28,28,-33,-34,-35,-27,28,28,28,-20,]),'*':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[30,-15,-16,-17,-18,-25,-21,30,-20,30,30,30,30,-38,-39,30,30,-42,-43,30,30,30,30,30,30,30,30,30,30,30,-19,-24,30,30,30,30,-26,30,30,30,30,30,30,-33,-34,-35,-27,30,30,30,-20,]),'/':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[31,-15,-16,-17,-18,-25,-21,31,-20,31,31,31,31,-38,-39,31,31,-42,-43,31,31,31,31,31,31,31,31,31,31,31,-19,-24,31,31,31,31,-26,31,31,31,31,31,31,-33,-34,-35,-27,31,31,31,-20,]),'MPLUS':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[32,-15,-16,-17,-18,-25,-21,32,-20,32,32,-36,-37,-38,-39,-40,-41,-42,-43,32,32,32,32,32,32,32,32,32,32,32,-19,-24,32,32,32,32,-26,32,32,32,32,32,32,-33,-34,-35,-27,32,32,32,-20,]),'MMINUS':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[33,-15,-16,-17,-18,-25,-21,33,-20,33,33,-36,-37,-38,-39,-40,-41,-42,-43,33,33,33,33,33,33,33,33,33,33,33,-19,-24,33,33,33,33,-26,33,33,33,33,33,33,-33,-34,-35,-27,33,33,33,-20,]),'MMLTP':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[34,-15,-16,-17,-18,-25,-21,34,-20,34,34,34,34,-38,-39,34,34,-42,-43,34,34,34,34,34,34,34,34,34,34,34,-19,-24,34,34,34,34,-26,34,34,34,34,34,34,-33,-34,-35,-27,34,34,34,-20,]),'MDIV':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[35,-15,-16,-17,-18,-25,-21,35,-20,35,35,35,35,-38,-39,35,35,-42,-43,35,35,35,35,35,35,35,35,35,35,35,-19,-24,35,35,35,35,-26,35,35,35,35,35,35,-33,-34,-35,-27,35,35,35,-20,]),'EQ':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[36,-15,-16,-17,-18,-25,-21,36,-20,36,36,-36,-37,-38,-39,-40,-41,-42,-43,36,36,36,36,36,36,-28,-29,-30,-31,-32,-19,-24,36,36,36,36,-26,36,36,36,36,36,36,-33,-34,-35,-27,36,36,36,-20,]),'NEQ':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[37,-15,-16,-17,-18,-25,-21,37,-20,37,37,-36,-37,-38,-39,-40,-41,-42,-43,37,37,37,37,37,37,-28,-29,-30,-31,-32,-19,-24,37,37,37,37,-26,37,37,37,37,37,37,-33,-34,-35,-27,37,37,37,-20,]),'GTEQ':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[38,-15,-16,-17,-18,-25,-21,38,-20,38,38,-36,-37,-38,-39,-40,-41,-42,-43,38,38,38,38,38,38,-28,-29,-30,-31,-32,-19,-24,38,38,38,38,-26,38,38,38,38,38,38,-33,-34,-35,-27,38,38,38,-20,]),'LTEQ':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[39,-15,-16,-17,-18,-25,-21,39,-20,39,39,-36,-37,-38,-39,-40,-41,-42,-43,39,39,39,39,39,39,-28,-29,-30,-31,-32,-19,-24,39,39,39,39,-26,39,39,39,39,39,39,-33,-34,-35,-27,39,39,39,-20,]),'>':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[40,-15,-16,-17,-18,-25,-21,40,-20,40,40,-36,-37,-38,-39,-40,-41,-42,-43,40,40,40,40,40,40,-28,-29,-30,-31,-32,-19,-24,40,40,40,40,-26,40,40,40,40,40,40,-33,-34,-35,-27,40,40,40,-20,]),'<':([4,7,8,9,10,19,27,47,48,50,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,91,92,98,100,104,105,106,107,109,111,126,127,128,129,137,140,148,154,],[41,-15,-16,-17,-18,-25,-21,41,-20,41,41,-36,-37,-38,-39,-40,-41,-42,-43,41,41,41,41,41,41,-28,-29,-30,-31,-32,-19,-24,41,41,41,41,-26,41,41,41,41,41,41,-33,-34,-35,-27,41,41,41,-20,]),'ELSE':([5,6,14,15,16,26,85,86,88,89,108,110,112,113,115,116,117,118,119,130,135,136,143,145,146,147,149,156,],[-6,-7,51,-51,-52,-5,-56,-53,-66,-67,-54,-55,-64,-60,-13,-14,134,-58,-59,-12,-68,-69,-61,-63,-70,-71,-65,-62,]),')':([7,8,9,10,19,27,47,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,91,92,100,105,106,107,126,127,128,129,148,],[-15,-16,-17,-18,-25,-21,82,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,102,103,-26,126,127,128,-33,-34,-35,-27,153,]),']':([7,8,9,10,19,27,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,98,100,109,126,127,128,129,],[-15,-16,-17,-18,-25,-21,-20,83,-23,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,100,-22,-26,129,-33,-34,-35,-27,]),',':([7,8,9,10,19,27,48,49,50,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,90,98,100,126,127,128,129,138,],[-15,-16,-17,-18,-25,-21,-20,84,-23,84,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,101,-22,-26,-33,-34,-35,-27,84,]),':':([7,8,9,10,19,27,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,100,104,126,127,128,129,],[-15,-16,-17,-18,-25,-21,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-26,125,-33,-34,-35,-27,]),'BREAK':([7,8,9,10,19,27,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,100,103,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[-15,-16,-17,-18,-25,-21,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-26,120,-64,-60,120,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,120,120,-8,120,-68,-69,120,120,120,-61,-9,-63,-70,-71,-65,-10,120,120,-37,-11,-62,]),'CONTINUE':([7,8,9,10,19,27,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,100,103,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,149,151,152,153,154,155,156,],[-15,-16,-17,-18,-25,-21,-20,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-28,-29,-30,-31,-32,-19,-24,-26,121,-64,-60,121,-13,-14,-57,-58,-59,-33,-34,-35,-27,-12,121,121,-8,121,-68,-69,121,121,121,-61,-9,-63,-70,-71,-65,-10,121,121,-37,-11,-62,]),'=':([10,19,57,100,129,],[42,-25,93,-26,-27,]),'PLUSASSIGN':([10,19,100,129,],[43,-25,-26,-27,]),'MINASSIGN':([10,19,100,129,],[44,-25,-26,-27,]),'MULTASSIGN':([10,19,100,129,],[45,-25,-26,-27,]),'DIVASSIGN':([10,19,100,129,],[46,-25,-26,-27,]),'ZEROS':([42,],[75,]),'ONES':([42,],[76,]),'EYE':([42,],[77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,3,24,87,],[1,25,58,99,]),'struct':([0,1,3,24,25,51,58,87,99,102,],[2,23,2,2,23,86,23,2,23,86,]),'expr':([0,1,3,11,12,13,17,18,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,58,84,87,93,95,96,97,99,101,102,103,114,122,123,125,131,132,134,139,140,141,142,150,152,153,],[4,4,4,47,48,50,52,50,4,4,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,4,90,91,92,4,98,4,104,105,106,107,4,109,4,111,111,137,50,140,111,111,111,148,111,111,111,154,111,111,]),'cond_expr':([0,1,3,24,25,51,58,87,99,102,],[5,5,5,5,5,5,5,5,5,5,]),'instruction':([0,1,3,24,25,51,58,87,99,102,],[6,6,6,6,6,6,6,6,6,6,]),'lvalue':([0,1,3,11,12,13,17,18,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,58,84,87,93,95,96,97,99,101,102,103,114,122,123,125,131,132,134,139,140,141,142,150,152,153,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'cond_if':([0,1,3,24,25,51,58,87,99,102,],[14,14,14,14,14,14,14,14,14,14,]),'cond_while':([0,1,3,24,25,51,58,87,99,102,103,114,131,132,134,140,141,142,152,153,],[15,15,15,15,15,15,15,15,15,15,118,118,118,118,118,118,118,118,118,118,]),'cond_for':([0,1,3,24,25,51,58,87,99,102,103,114,131,132,134,140,141,142,152,153,],[16,16,16,16,16,16,16,16,16,16,119,119,119,119,119,119,119,119,119,119,]),'array_interior':([13,18,123,],[49,53,138,]),'cond_block':([51,102,],[85,110,]),'loop_cond_block':([103,134,140,153,],[112,145,149,156,]),'loop_struct':([103,114,131,132,134,140,141,142,152,153,],[113,133,133,144,113,113,144,133,144,113,]),'loop_cond_expr':([103,114,131,132,134,140,141,142,152,153,],[115,115,115,115,115,115,115,115,115,115,]),'loop_instruction':([103,114,131,132,134,140,141,142,152,153,],[116,116,116,116,116,116,116,116,116,116,]),'loop_cond_if':([103,114,131,132,134,140,141,142,152,153,],[117,117,117,117,117,117,117,117,117,117,]),'loop_start':([114,131,142,],[132,141,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> struct','start',1,'p_start','Mparser.py',19),
  ('start -> start struct','start',2,'p_start','Mparser.py',20),
  ('start -> { start }','start',3,'p_start','Mparser.py',21),
  ('start -> start { start }','start',4,'p_start','Mparser.py',22),
  ('struct -> expr ;','struct',2,'p_struct','Mparser.py',25),
  ('struct -> cond_expr','struct',1,'p_struct','Mparser.py',26),
  ('struct -> instruction','struct',1,'p_struct','Mparser.py',27),
  ('loop_start -> loop_struct','loop_start',1,'p_loop_start','Mparser.py',32),
  ('loop_start -> loop_start loop_struct','loop_start',2,'p_loop_start','Mparser.py',33),
  ('loop_start -> { loop_start }','loop_start',3,'p_loop_start','Mparser.py',34),
  ('loop_start -> loop_start { loop_start }','loop_start',4,'p_loop_start','Mparser.py',35),
  ('loop_struct -> expr ;','loop_struct',2,'p_loop_struct','Mparser.py',38),
  ('loop_struct -> loop_cond_expr','loop_struct',1,'p_loop_struct','Mparser.py',39),
  ('loop_struct -> loop_instruction','loop_struct',1,'p_loop_struct','Mparser.py',40),
  ('expr -> INTNUM','expr',1,'p_expr_const','Mparser.py',45),
  ('expr -> FLOATNUM','expr',1,'p_expr_const','Mparser.py',46),
  ('expr -> STRING','expr',1,'p_expr_const','Mparser.py',47),
  ('expr -> lvalue','expr',1,'p_expr_lvalue','Mparser.py',51),
  ('expr -> ( expr )','expr',3,'p_expr_group','Mparser.py',55),
  ('expr -> - expr','expr',2,'p_expr_unmin','Mparser.py',60),
  ("expr -> expr '",'expr',2,'p_expr_transpose','Mparser.py',64),
  ('array_interior -> array_interior , expr','array_interior',3,'p_array_interior','Mparser.py',70),
  ('array_interior -> expr','array_interior',1,'p_array_interior','Mparser.py',71),
  ('expr -> [ array_interior ]','expr',3,'p_expr_array','Mparser.py',74),
  ('lvalue -> ID','lvalue',1,'p_lvalue','Mparser.py',79),
  ('lvalue -> ID [ expr ]','lvalue',4,'p_lvalue','Mparser.py',80),
  ('lvalue -> ID [ expr , expr ]','lvalue',6,'p_lvalue','Mparser.py',81),
  ('expr -> lvalue = expr','expr',3,'p_expr_assign','Mparser.py',111),
  ('expr -> lvalue PLUSASSIGN expr','expr',3,'p_expr_assign','Mparser.py',112),
  ('expr -> lvalue MINASSIGN expr','expr',3,'p_expr_assign','Mparser.py',113),
  ('expr -> lvalue MULTASSIGN expr','expr',3,'p_expr_assign','Mparser.py',114),
  ('expr -> lvalue DIVASSIGN expr','expr',3,'p_expr_assign','Mparser.py',115),
  ('expr -> lvalue = ZEROS ( expr )','expr',6,'p_expr_assign','Mparser.py',116),
  ('expr -> lvalue = ONES ( expr )','expr',6,'p_expr_assign','Mparser.py',117),
  ('expr -> lvalue = EYE ( expr )','expr',6,'p_expr_assign','Mparser.py',118),
  ('expr -> expr + expr','expr',3,'p_expr_binop','Mparser.py',123),
  ('expr -> expr - expr','expr',3,'p_expr_binop','Mparser.py',124),
  ('expr -> expr * expr','expr',3,'p_expr_binop','Mparser.py',125),
  ('expr -> expr / expr','expr',3,'p_expr_binop','Mparser.py',126),
  ('expr -> expr MPLUS expr','expr',3,'p_expr_matop','Mparser.py',130),
  ('expr -> expr MMINUS expr','expr',3,'p_expr_matop','Mparser.py',131),
  ('expr -> expr MMLTP expr','expr',3,'p_expr_matop','Mparser.py',132),
  ('expr -> expr MDIV expr','expr',3,'p_expr_matop','Mparser.py',133),
  ('expr -> expr EQ expr','expr',3,'p_expr_logic','Mparser.py',139),
  ('expr -> expr NEQ expr','expr',3,'p_expr_logic','Mparser.py',140),
  ('expr -> expr GTEQ expr','expr',3,'p_expr_logic','Mparser.py',141),
  ('expr -> expr LTEQ expr','expr',3,'p_expr_logic','Mparser.py',142),
  ('expr -> expr > expr','expr',3,'p_expr_logic','Mparser.py',143),
  ('expr -> expr < expr','expr',3,'p_expr_logic','Mparser.py',144),
  ('cond_expr -> cond_if','cond_expr',1,'p_cond_expr','Mparser.py',150),
  ('cond_expr -> cond_while','cond_expr',1,'p_cond_expr','Mparser.py',151),
  ('cond_expr -> cond_for','cond_expr',1,'p_cond_expr','Mparser.py',152),
  ('cond_block -> struct','cond_block',1,'p_cond_block','Mparser.py',155),
  ('cond_block -> { start }','cond_block',3,'p_cond_block','Mparser.py',156),
  ('cond_if -> IF ( expr ) cond_block','cond_if',5,'p_cond_if','Mparser.py',159),
  ('cond_if -> cond_if ELSE cond_block','cond_if',3,'p_cond_if','Mparser.py',160),
  ('loop_cond_expr -> loop_cond_if','loop_cond_expr',1,'p_loop_cond_expr','Mparser.py',165),
  ('loop_cond_expr -> cond_while','loop_cond_expr',1,'p_loop_cond_expr','Mparser.py',166),
  ('loop_cond_expr -> cond_for','loop_cond_expr',1,'p_loop_cond_expr','Mparser.py',167),
  ('loop_cond_block -> loop_struct','loop_cond_block',1,'p_loop_cond_block','Mparser.py',170),
  ('loop_cond_block -> { loop_start }','loop_cond_block',3,'p_loop_cond_block','Mparser.py',171),
  ('loop_cond_if -> IF ( expr ) loop_cond_block','loop_cond_if',5,'p_loop_cond_if','Mparser.py',174),
  ('loop_cond_if -> loop_cond_if ELSE loop_cond_block','loop_cond_if',3,'p_loop_cond_if','Mparser.py',175),
  ('cond_while -> WHILE ( expr ) loop_cond_block','cond_while',5,'p_cond_while','Mparser.py',178),
  ('cond_for -> FOR ID = expr : expr loop_cond_block','cond_for',7,'p_cond_for','Mparser.py',181),
  ('instruction -> RETURN expr ;','instruction',3,'p_instruction','Mparser.py',186),
  ('instruction -> PRINT array_interior ;','instruction',3,'p_instruction','Mparser.py',187),
  ('loop_instruction -> BREAK ;','loop_instruction',2,'p_loop_instruction','Mparser.py',190),
  ('loop_instruction -> CONTINUE ;','loop_instruction',2,'p_loop_instruction','Mparser.py',191),
  ('loop_instruction -> RETURN expr ;','loop_instruction',3,'p_loop_instruction','Mparser.py',192),
  ('loop_instruction -> PRINT array_interior ;','loop_instruction',3,'p_loop_instruction','Mparser.py',193),
]
